module.exports = {
	root: true,
	parser: 'babel-eslint',
	parserOptions: {
		'ecmaVersion': 9,
		'sourceType': 'module',
		'ecmaFeatures': {
			'jsx': true,
		}
	},
	env: {
		'browser': true,
		'node': true,
		'es6': true,
		'jest': true,
	},
	plugins: [
		'import',
		'react',
		'react-hooks',
	],
	settings: {
		'import/resolver': 'webpack',
		'react': {
			'version': '16.8.0',
		}
	},
	rules: {
		'array-bracket-spacing': 'error',
		'array-callback-return': 'error',
		'arrow-body-style': ['error', 'as-needed'],
		'arrow-parens': ['error', 'as-needed'],
		'arrow-spacing': 'error',
		'indent': ['error', 'tab', { SwitchCase: 1 }],
		'block-spacing': 'error',
		'brace-style': ['error', '1tbs', { 'allowSingleLine': true }],
		'camelcase': 'error',
		'callback-return': ['error', ['cb', 'callback', 'next']],
		'class-methods-use-this': 'error',
		'comma-dangle': ['error', 'always-multiline'],
		'comma-spacing': 'error',
		'comma-style': ['error', 'last'],
		'computed-property-spacing': 'error',
		'consistent-return': 'error',
		'curly': ['error', 'multi-line'],
		'default-case': 'error',
		'dot-location': ['error', 'property'],
		'dot-notation': ['error', { allowKeywords: true }],
		'eol-last': 'error',
		'eqeqeq': 'error',
		'func-call-spacing': 'error',
		'func-style': ['error', 'expression'],
		'function-paren-newline': ['error', 'multiline'],
		'generator-star-spacing': 'error',
		'guard-for-in': 'error',
		'handle-callback-err': ['error', 'err'],
		'key-spacing': [
			'error', {
				beforeColon: false,
				afterColon: true
			}
		],
		'keyword-spacing': 'error',
		'lines-around-comment': [
			'error', {
				beforeBlockComment: true,
				afterBlockComment: false,
				beforeLineComment: true,
				afterLineComment: false
			}
		],
		'max-len': [
			'error', 160, {
				'ignoreComments': true,
				'ignoreUrls': true,
				'ignoreStrings': true,
				'ignoreTemplateLiterals': true,
				'ignoreRegExpLiterals': true
			}
		],
		'max-statements-per-line': 'error',
		'new-cap': 'error',
		'new-parens': 'error',
		'no-alert': 'error',
		'no-array-constructor': 'error',
		'no-buffer-constructor': 'error',
		'no-caller': 'error',
		'no-catch-shadow': 'error',
		'no-confusing-arrow': ['error', { allowParens: true }],
		'no-console': 'error',
		'no-delete-var': 'error',
		'no-else-return': ['error', { allowElseIf: false }],
		'no-eval': 'error',
		'no-extend-native': 'error',
		'no-extra-boolean-cast': 'error',
		'no-extra-parens': ['error', 'all', { enforceForArrowConditionals: false, ignoreJSX: 'multi-line' }],
		'no-extra-semi': 'error',
		'no-extra-bind': 'error',
		'no-fallthrough': 'error',
		'no-floating-decimal': 'error',
		'no-global-assign': 'error',
		'no-implied-eval': 'error',
		'no-iterator': 'error',
		'no-label-var': 'error',
		'no-labels': 'error',
		'no-lone-blocks': 'error',
		'no-loop-func': 'error',
		'no-mixed-requires': 'error',
		'no-mixed-spaces-and-tabs': ['error', false],
		'no-multi-spaces': 'error',
		'no-multi-str': 'error',
		'no-multiple-empty-lines': [
			'error', {
				max: 2,
				maxBOF: 0,
				maxEOF: 0
			}
		],
		'no-nested-ternary': 'error',
		'no-new': 'error',
		'no-new-func': 'error',
		'no-new-object': 'error',
		'no-new-require': 'error',
		'no-new-wrappers': 'error',
		'no-octal': 'error',
		'no-octal-escape': 'error',
		'no-param-reassign': 'error',
		'no-path-concat': 'error',
		'no-process-exit': 'error',
		'no-proto': 'error',
		'no-redeclare': 'error',
		'no-restricted-properties': [
			'error', {
				property: 'substring',
				message: 'Use .slice instead of .substring.'
			}, {
				property: 'substr',
				message: 'Use .slice instead of .substr.'
			}, {
				object: 'assert',
				property: 'equal',
				message: 'Use assert.strictEqual instead of assert.equal.'
			}, {
				object: 'assert',
				property: 'notEqual',
				message: 'Use assert.notStrictEqual instead of assert.notEqual.'
			}, {
				object: 'assert',
				property: 'deepEqual',
				message: 'Use assert.deepStrictEqual instead of assert.deepStrictEqual.'
			}, {
				object: 'assert',
				property: 'notDeepEqual',
				message: 'Use assert.notDeepStrictEqual instead of assert.notDeepEqual.'
			},
		],
		'no-return-assign': 'error',
		'no-script-url': 'error',
		'no-self-assign': 'error',
		'no-self-compare': 'error',
		'no-sequences': 'error',
		'no-shadow': 'error',
		'no-shadow-restricted-names': 'error',
		'no-throw-literal': 'error',
		'no-trailing-spaces': ['error', { 'skipBlankLines': true }],
		'no-undef': ['error', { typeof: true }],
		'no-undef-init': 'error',
		'no-underscore-dangle': ['error', { allowAfterThis: true }],
		'no-unmodified-loop-condition': 'error',
		'no-unneeded-ternary': 'error',
		'no-unused-expressions': 'error',
		'no-unused-vars': [
			'error', {
				vars: 'all',
				args: 'after-used'
			}
		],
		'no-use-before-define': 'error',
		'no-useless-call': 'error',
		'no-useless-computed-key': 'error',
		'no-useless-concat': 'error',
		'no-useless-constructor': 'error',
		'no-useless-escape': 'error',
		'no-useless-rename': 'error',
		'no-useless-return': 'error',
		'no-whitespace-before-property': 'error',
		'no-with': 'error',
		'no-var': 'error',
		'object-curly-newline': [
			'error', {
				'consistent': true,
				'multiline': true
			}
		],
		'object-curly-spacing': ['error', 'always'],
		'object-property-newline': ['error', { 'allowAllPropertiesOnSameLine': true }],
		'object-shorthand': 'error',
		'one-var-declaration-per-line': 'error',
		'operator-assignment': 'error',
		'operator-linebreak': ['error', 'before'],
		'padding-line-between-statements': [
			'error', {
				blankLine: 'always',
				prev: ['const', 'let', 'var'],
				next: '*',
			}, {
				blankLine: 'any',
				prev: ['const', 'let', 'var'],
				next: ['const', 'let', 'var'],
			},
		],
		'prefer-arrow-callback': 'error',
		'prefer-const': 'error',
		'prefer-numeric-literals': 'error',
		'prefer-promise-reject-errors': 'error',
		'prefer-rest-params': 'error',
		'prefer-spread': 'error',
		'prefer-template': 'error',
		'quotes': ['error', 'single'],
		'quote-props': ['error', 'as-needed'],
		'radix': 'error',
		'rest-spread-spacing': 'error',
		'semi': 'error',
		'semi-spacing': [
			'error', {
				before: false,
				after: true
			}
		],
		'semi-style': 'error',
		'space-before-blocks': 'error',
		'space-before-function-paren': ['error', 'never'],
		'space-in-parens': 'error',
		'space-infix-ops': 'error',
		'space-unary-ops': [
			'error', {
				words: true,
				nonwords: false
			}
		],
		'spaced-comment': ['error', 'always', { exceptions: ['-'] }],
		'strict': ['error', 'global'],
		'switch-colon-spacing': 'error',
		'symbol-description': 'error',
		'template-curly-spacing': ['error', 'never'],
		'template-tag-spacing': 'error',
		'unicode-bom': 'error',
		'valid-jsdoc': [
			'error', {
				prefer: { 'return': 'returns' },
				preferType: {
					'String': 'string',
					'Number': 'number',
					'Boolean': 'boolean',
					'object': 'Object',
					'function': 'Function'
				}
			}
		],
		'wrap-iife': 'error',
		'yield-star-spacing': 'error',
		'import/export': 'error',
		'import/exports-last': 'error',
		'import/extensions': ['error', 'never'],
		'import/first': 'error',
		'import/max-dependencies': ['error', {'max': 10}],
		'import/named': 'error',
		'import/namespace': 'error',
		'import/newline-after-import': 'error',
		'import/no-amd': 'error',
		'import/no-cycle': 'error',
		'import/no-deprecated': 'warn',
		'import/no-mutable-exports': 'error',
		'import/no-named-as-default': 'error',
		'import/no-self-import': 'error',
		'import/no-useless-path-segments': 'error',
		'import/order': ['error', {'groups': ['builtin', 'external', 'internal', 'parent', 'sibling', 'index']}],
		'import/prefer-default-export': 'warn',
		'react/boolean-prop-naming': 'error',
		'react/button-has-type': 'error',
		'react/default-props-match-prop-types': 'error',
		'react/no-access-state-in-setstate': 'error',
		'react/no-children-prop': 'error',
		'react/no-danger': 'error',
		'react/no-danger-with-children': 'error',
		'react/no-deprecated': 'warn',
		'react/no-did-mount-set-state': 'error',
		'react/no-did-update-set-state': 'error',
		'react/no-direct-mutation-state': 'error',
		'react/no-find-dom-node': 'error',
		'react/no-is-mounted': 'error',
		'react/no-multi-comp': 'error',
		'react/no-redundant-should-component-update': 'error',
		'react/no-render-return-value': 'error',
		'react/no-set-state': 'warn',
		'react/no-typos': 'error',
		'react/no-string-refs': 'error',
		'react/no-this-in-sfc': 'error',
		'react/no-unescaped-entities': 'error',
		'react/no-unknown-property': 'warn',
		'react/no-unsafe': 'warn',
		'react/no-unused-prop-types': 'warn',
		'react/no-unused-state': 'error',
		'react/no-will-update-set-state': 'error',
		'react/prefer-es6-class': 'error',
		'react/prefer-stateless-function': 'error',
		'react/prop-types': ['error', { ignore: ['children'], }],
		'react/react-in-jsx-scope': 'error',
		'react/require-default-props': 'error',
		'react/require-render-return': 'error',
		'react/self-closing-comp': 'error',
		'react/sort-comp': 'error',
		'react/style-prop-object': 'error',
		'react/void-dom-elements-no-children': 'error',
		'react/jsx-boolean-value': 'error',
		'react/jsx-child-element-spacing': 'error',
		'react/jsx-closing-bracket-location': ['error', 'after-props'],
		'react/jsx-closing-tag-location': 'error',
		'react/jsx-curly-spacing': ['error', {
			'when': 'always',
			'allowMultiline': false,
			'spacing': { 'objectLiterals': 'never' },
		}],
		'react/jsx-equals-spacing': 'error',
		'react/jsx-first-prop-new-line': 'error',
		'react/jsx-handler-names': 'error',
		'react/jsx-indent': ['error', 'tab'],
		'react/jsx-indent-props': ['error', 'tab'],
		'react/jsx-key': 'error',
		'react/jsx-no-bind': ['error', { 'ignoreDOMComponents': true }],
		'react/jsx-no-comment-textnodes': 'error',
		'react/jsx-no-duplicate-props': 'error',
		'react/jsx-no-target-blank': 'error',
		'react/jsx-no-undef': ['error', { 'allowGlobals': true }],
		'react/jsx-one-expression-per-line': ['error', { 'allow': 'single-child' }],
		'react/jsx-curly-brace-presence': ['error', { 'props': 'never' }],
		'react/jsx-pascal-case': 'error',
		'react/jsx-props-no-multi-spaces': 'error',
		'react/jsx-tag-spacing': ['error', { 'beforeClosing': 'never' }],
		'react/jsx-uses-react': 'error',
		'react/jsx-uses-vars': 'error',
		'react/jsx-wrap-multilines': 'error',
	},
};
